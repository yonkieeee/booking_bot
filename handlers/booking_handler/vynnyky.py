import asyncio
import requests
import re
from aiogram import Bot, Dispatcher, F, types, Router
from aiogram.client.default import DefaultBotProperties
from aiogram.enums.parse_mode import ParseMode
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
import bots
import keyboards
from datetime import datetime
import pytz
from calendars import VYNNYKY_TEAMUP_API_KEY, VYNNYKY_TEAMUP_CALENDAR_ID
from . import db_booking
from .booking_menu import fetch_calendar_events, add_calendar_event, check_event_conflicts
from handlers.start_menu import user_db

router = Router()
bot = Bot(bots.main_bot, default=DefaultBotProperties(parse_mode=ParseMode.HTML))


class vynnyky_Bookingreg(StatesGroup):
    vynnyky_booking_name = State()
    vynnyky_number_of_room = State()
    vynnyky_day = State()
    vynnyky_start_time = State()
    vynnyky_end_time = State()


@router.callback_query(F.data == "vynnyky")
async def bookvynnyky(callback: types.CallbackQuery):
    await callback.message.answer("–ü–µ—Ä–µ–¥ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è–º –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è' –ø–µ—Ä–µ–≥–ª—è–Ω—å –≥—Ä–∞—Ñ—ñ–∫ üìÖ", reply_markup=keyboards.vynnykykb)

@router.callback_query(F.data == "RegistrateBookingVynnyky")
async def reg_vynnyky_one(callback: types.CallbackQuery, state: FSMContext):
    print("1 state done")
    await state.set_state(vynnyky_Bookingreg.vynnyky_booking_name)
    await bot.send_message(chat_id=callback.from_user.id, text="–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –ø–æ–¥—ñ—ó")

@router.message(vynnyky_Bookingreg.vynnyky_booking_name)
async def reg_vynnyky_two(message: Message, state: FSMContext):
    await state.update_data(vynnyky_booking_name=message.text)
    await state.set_state(vynnyky_Bookingreg.vynnyky_number_of_room)
    await message.answer("–û–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∫—ñ–º–Ω–∞—Ç–∏", reply_markup=keyboards.vynnyky_room_inline)

@router.callback_query(vynnyky_Bookingreg.vynnyky_number_of_room)
async def reg_vynnyky_three(callback: CallbackQuery, state: FSMContext):
    await state.update_data(vynnyky_number_of_room=callback.data)
    await state.set_state(vynnyky_Bookingreg.vynnyky_day)
    await callback.message.answer("–í–≤–µ–¥–∏ –¥–µ–Ω—å —É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-–ú–ú-–î–î. \n üìÜ–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 2024-05-20")

@router.message(vynnyky_Bookingreg.vynnyky_day)
async def reg_vynnyky_four(message: Message, state: FSMContext):
    date_pattern = r"^\d{4}-\d{2}-\d{2}$"
    if not re.match(date_pattern, message.text):
        await message.answer("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ –¥–µ–Ω—å —É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-–ú–ú-–î–î. \n üìÜ–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 2024-05-20")
        return
    await state.update_data(vynnyky_day=message.text)
    await state.set_state(vynnyky_Bookingreg.vynnyky_start_time)
    await message.answer("–í–≤–µ–¥–∏ —á–∞—Å –ø–æ—á–∞—Ç–∫—É —É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–•. \n ‚è∞–ù–∞–ø—Ä–∏–∫–ª–∞–¥ 15:00")

@router.message(vynnyky_Bookingreg.vynnyky_start_time)
async def reg_vynnyky_five(message: Message, state: FSMContext):
    time_pattern = r"^\d{2}:\d{2}$"
    if not re.match(time_pattern, message.text):
        await message.answer("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–•. \n ‚è∞–ù–∞–ø—Ä–∏–∫–ª–∞–¥ 15:00")
        return
    await state.update_data(vynnyky_start_time=message.text)
    await state.set_state(vynnyky_Bookingreg.vynnyky_end_time)
    await message.answer("–í–≤–µ–¥–∏ —á–∞—Å –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–•. \n ‚è∞–ù–∞–ø—Ä–∏–∫–ª–∞–¥ 16:00")


@router.message(vynnyky_Bookingreg.vynnyky_end_time)
async def reg_vynnyky_six(message: Message, state: FSMContext):
    time_pattern = r"^\d{2}:\d{2}$"
    if not re.match(time_pattern, message.text):
        await message.answer("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–•. \n ‚è∞–ù–∞–ø—Ä–∏–∫–ª–∞–¥ 16:00")
        return
    await state.update_data(vynnyky_end_time=message.text)
    data = await state.get_data()
    
    vynnyky_room_mapping = {"kukhnya": 13281316, "poverkh_1": 13281315, "poverkh2_kimnata1": 13281315, "poverkh2_kimnata2": 13281315, "poverkh2_kimnata3": 13281315, "poverkh2_kimnata4": 13281315}
    if data["vynnyky_number_of_room"] in vynnyky_room_mapping:
        room = data["vynnyky_number_of_room"]
        data["vynnyky_number_of_room"] = vynnyky_room_mapping[data["vynnyky_number_of_room"]]
    else:
        await message.answer("–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä –∫—ñ–º–Ω–∞—Ç–∏. –ó–∞—Ä–µ—î—Å—Ç—Ä—É–π –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —â–µ —Ä–∞–∑.")
        await state.set_state(vynnyky_Bookingreg.vynnyky_booking_name)
        await bot.send_message(chat_id=message.from_user.id, text="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø–æ–¥—ñ—ó")
        return

    local_tz = pytz.timezone("Europe/Kiev")
    start_datetime = local_tz.localize(datetime.strptime(f'{data["vynnyky_day"]} {data["vynnyky_start_time"]}', '%Y-%m-%d %H:%M')).astimezone(pytz.utc)
    end_datetime = local_tz.localize(datetime.strptime(f'{data["vynnyky_day"]} {data["vynnyky_end_time"]}', '%Y-%m-%d %H:%M')).astimezone(pytz.utc)

    print(f"Checking conflicts for room {data['vynnyky_number_of_room']} from {start_datetime.isoformat()} to {end_datetime.isoformat()}")
    if await check_event_conflicts(data["vynnyky_number_of_room"], start_datetime.isoformat(), end_datetime.isoformat(), VYNNYKY_TEAMUP_CALENDAR_ID, VYNNYKY_TEAMUP_API_KEY):
        await message.answer("–ù–∞ —Ü–µ–π —á–∞—Å —É –≤–∏–±—Ä–∞–Ω—ñ–π –∫—ñ–º–Ω–∞—Ç—ñ –≤–∂–µ —î –ø–æ–¥—ñ—è. –í–∏–±–µ—Ä–∏ —ñ–Ω—à–∏–π —á–∞—Å.")
        await state.set_state(vynnyky_Bookingreg.vynnyky_day)  # –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –¥–∞—Ç–∏
        await message.answer("–í–≤–µ–¥–∏ –¥–µ–Ω—å —É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-–ú–ú-–î–î. \n üìÜ–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 2024-05-20")
    else:
        response = await add_calendar_event(data, start_datetime.isoformat(), end_datetime.isoformat(), VYNNYKY_TEAMUP_CALENDAR_ID, VYNNYKY_TEAMUP_API_KEY, "vynnyky", message)
        if 'event' in response:
            user_db_obj = user_db.DataBase("db_plast.db")
            db = db_booking.Booking_DataBase("db_plast.db")
            db.add_book_reg(
                user_id=message.from_user.id,
                user_name=user_db_obj.get_name(message.from_user.id), 
                user_surname=user_db_obj.get_surname(message.from_user.id),
                user_name_of_booking=data["vynnyky_booking_name"],
                user_domivka="–í–∏–Ω–Ω–∏–∫–∏",
                user_room=room,      
                user_date=data["vynnyky_day"],
                user_start_time=data["vynnyky_start_time"],
                user_end_time=data["vynnyky_end_time"],
                code_of_booking=response['event'].get('id', 'no_code') 
            )
            await message.answer('–¢–≤–æ—î –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∑–∞–ø–æ–≤–Ω–µ–Ω–æ.ü•≥ –¢–∏ –º–æ–∂–µ—à –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –π–æ–≥–æ —É <i><a href="https://teamup.com/kstbv5srw3gter52zv">–∫–∞–ª–µ–Ω–¥–∞—Ä—ñ</a></i>. –Ø–∫—â–æ –≤–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏, —Ç–æ –∑–≤–µ—Ä—Ç–∞–π—Å—è –¥–æ –æ—Ñ—ñ—Å—É –ø–ª–∞—Å—Ç—É @lvivplastoffice', parse_mode=ParseMode.HTML)
        else:
            await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –ø–æ–¥—ñ—ó.‚òπÔ∏è –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –æ—Ñ—ñ—Å—É –ü–ª–∞—Å—Ç—É @lvivplastoffice.")
        await state.clear()